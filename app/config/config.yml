imports:
    - { resource: parameters.php }
    - { resource: security.yml }

framework:
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale: en
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"


# Assetic is not needed as brunch handles compiling the frontend assets
#assetic:
#    debug:          "%kernel.debug%"
#    use_controller: false
#    bundles:        [ ]
#    #java: /usr/bin/java
#    filters:
#        cssrewrite: ~
#        #closure:
#        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
#        #yui_css:
#        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"


# Doctrine Configuration
doctrine:
    dbal:
        # NOTE: the credentials should normally come from a server specific config file
        # i've omitted this here for demo purposes...
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     3306
        dbname:   sfchaplin
        user:     admin
        password: changeme
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: smtp
    host:      127.0.0.1
    username:  null
    password:  null
    spool:     { type: memory }

# configure the fos user entity
fos_user: 
    db_driver: orm
    firewall_name: main
    user_class: Acme\SPA\ApiBundle\Entity\User    
    
    
sensio_framework_extra:
    # disable the view annotation to avoid conflicts with FOSRest::View annotation
    view: { annotations: false }
    router: { annotations: true }
    request: { converters: true }
    
    
# configure the rest bundle
fos_rest:
    # switch the response format based on the request format headers
    format_listener: true
    # return json by default
    routing_loader:
        default_format: json
    # configure the available response formats        
    view:
        formats:
            json: true
            xml: true
            rss: false
        # force the serialization of controller return values into a Response
        view_response_listener: force
    # deserialize the request body
    body_listener: true
    param_fetcher_listener: force
    # restrict allowed methods for controller actions
    allowed_methods_listener: true     
    
# configure the oauth server entities
fos_oauth_server:
    db_driver: orm       
    client_class:        Acme\SPA\ApiBundle\Entity\OAuth\Client
    access_token_class:  Acme\SPA\ApiBundle\Entity\OAuth\AccessToken
    refresh_token_class: Acme\SPA\ApiBundle\Entity\OAuth\RefreshToken
    auth_code_class:     Acme\SPA\ApiBundle\Entity\OAuth\AuthCode    
    

# expose automatically generated routes / routes from 3rd party bundles 
# to the chaplin application
fos_js_routing:
    routes_to_expose:
      - get_books
      - get_book
      - put_book
      - post_books
      - delete_book
      - fos_user_security_login